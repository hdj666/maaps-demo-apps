

chain TestModuleTimeout {
    # wait for a file /tmp/go
    entrypoint loop waitForFile {
        delay = 3
        code  = {
            from os         import unlink
            from os.path    import exists, isfile

            filename            = '/tmp/go'
            payload             = None

            if exists(filename):
                with file(filename, 'r') as fp:
                    data = fp.read().strip()

                if len(data) > 0:
                    payload = data
                else:
                    payload = "some data."

                logger.info('Removing File.')
                unlink(filename)
        }
    }

    module python main {
        timeout = 2
        code    = {
            import time
            time_to_sleep = 5

            logger.info("My payload is '%s'", payload)

            if payload != "some data.":
                logger.info("sleeping now for %s sec's.", time_to_sleep)
                time.sleep(time_to_sleep)
                logger.error("We should not reach this logger call!!")
            else:
                logger.info("payload (content of the message file) is the default, so we don't sleep.")

        }
    }

    onException myExceptionHandler {
        code = {
            logger.info("*"*40)
            logger.error("Houston we have a exception!")
            logger.info("The exception is: %s", exception)
            logger.info("*"*40)
        }
    }
}
